1 REM start GW-BASIC with /f:9
2 REM version 0.2 by V. Reijs
10 GOTO 1000: REM BASICODE-2 versie 1.0, (C) 1987, H. Vosman
20 KEY OFF: CLEAR : OPTION BASE 0: SCREEN 0: CLS : COLOR 7, 0, 0
21 OHT% = 80: OVT% = 24: REM grenzen tekst scherm (80X24), als OHT%=40 dan (40x24)
22 WIDTH OHT%: LOCATE 1, 1, 0
23 SR = 0: SR$ = "": IN$ = " ": CT = 0: CN = 0
24 ON ERROR GOTO 980
25 OX$ = TIME$: RANDOMIZE (VAL(LEFT$(OX$, 2)) + VAL(MID$(OX$, 4, 2)) + VAL(RIGHT$(OX$, 2)))
43 OPRN = 1: REM printing to file
46 IF OPRN = 1 THEN OPEN "Printbas.txt" FOR OUTPUT AS 9
50 GOTO 1010
100 CLS : LOCATE , , 0: RETURN
110 OVE% = INT(VE) + 1: OHO% = INT(HO) + 1
111 IF OVE% > OVT% THEN OVE% = OVT% ELSE IF OVE% < 1 THEN OVE% = 1
112 IF OHO% > OHT% THEN OHO% = OHT% ELSE IF OHO% < 1 THEN OHO% = 1
113 LOCATE OVE%, OHO%, 0: RETURN
120 HO = POS(HO) - 1: VE = CSRLIN - 1: RETURN
200 IN$ = INKEY$: IF IN$ <> "" GOTO 212 ELSE RETURN
210 LOCATE , , 1: REM cursor wordt zichtbaar
211 IN$ = INKEY$: IF IN$ = "" GOTO 211 ELSE LOCATE , , 0
212 IN$ = LEFT$(IN$, 1): RETURN
250 BEEP: RETURN
260 RV = RND(1): RETURN
270 FR = FRE(""): RETURN
300 SR$ = MID$(STR$(ABS(SR)), 2): IF LEFT$(SR$, 1) = "." THEN SR$ = "0" + SR$
301 IF SR < 0 THEN SR$ = "-" + SR$
302 RETURN
310 SR$ = "": IF CT <= 0 THEN RETURN ELSE OS# = CDBL(ABS(SR))
311 IF CN <= 0 THEN OI# = INT(OS# + .5): OF# = 0: GOTO 313 ELSE OI# = INT(OS# + .5 * 10 ^ -CN): OF# = INT(((OS# - OI#) * 10 ^ CN) + .5)
312 OFIP# = OF#: GOSUB 316: IF OX$ = "" GOTO 315 ELSE SR$ = "." + STRING$(CN - LEN(OX$), 48) + OX$
313 OFIP# = OI#: GOSUB 316: IF OX$ = "" GOTO 315 ELSE SR$ = OX$ + SR$: IF (SGN(SR) < 0) AND (NOT ((OI# = 0) AND (OF# = 0))) THEN SR$ = "-" + SR$
314 IF LEN(SR$) <= CT THEN SR$ = STRING$(CT - LEN(SR$), 32) + SR$: RETURN
315 SR$ = STRING$(CT, 42): RETURN
316 IF OFIP# > 10 ^ 16 THEN OX$ = "": RETURN ELSE OX$ = MID$(STR$(OFIP#), 2): RETURN
350 IF OPRN = 0 THEN LPRINT SR$; : RETURN
355 IF OPRN = 1 THEN PRINT #9, SR$; : RETURN
360 IF OPRN = 0 THEN LPRINT : RETURN
365 IF OPRN = 1 THEN PRINT #9, "": RETURN
950 IF OPRN = 1 THEN CLOSE 9
951 GOSUB 952: CLEAR : ON ERROR GOTO 0: END
952 SCREEN 0, 0, 0: WIDTH 80: LOCATE , , 1: COLOR 7, 0, 0: KEY ON: CLS : RETURN
980 OHO% = POS(0): OVE% = CSRLIN: LOCATE 25, 1
981 IF ERR = 24 THEN PRINT "Device timeout, printer?"; : BEEP: GOTO 992
982 IF ERR = 27 THEN PRINT "Printer heeft geen papier of staat uit."; : BEEP: GOTO 991
983 IF ERR = 1 THEN PRINT "NEXT zonder FOR in regel"; ERL; : GOTO 991
984 IF ERR = 26 THEN PRINT "FOR zonder NEXT in regel"; ERL; : GOTO 991
985 IF ERR = 4 THEN PRINT "READ fout, te weinig DATA aanwezig."; : GOTO 991
986 IF ERR = 5 THEN PRINT "Onjuiste parameters, in regel"; ERL; : GOTO 991
987 IF ERR = 11 THEN PRINT "Deling door nul, in regel"; ERL; : GOTO 991
988 IF ERR <> 2 THEN 990
989 GOSUB 952: PRINT "BASIC syntax fout in regel"; ERL; : LOCATE OVE%, OHO%: ON ERROR GOTO 0: RESUME
990 PRINT "Fout nr"; ERR; "in regel"; ERL; "Zie handleiding";
991 O$ = INPUT$(1): LOCATE 25, 1: PRINT SPC(OHT% - 1);
992 LOCATE OVE%, OHO%: RESUME NEXT: REM (C) 1987, H. Vosman    
1000 DIM AA$(12), AB$(12), AK$(92), AL$(144)
1001 DIM CH$(6), M1$(2), M2$(2), M3$(2), M4$(2), M5$(2), M6$(2)
1002 DIM M7$(2), M8$(2), M9$(2), N1$(2), N2$(2), N3$(2)
1006 A = 500: GOTO 20: REM CHORDS
1010 REM
1020 GOSUB 100: GOSUB 20000
1030 PRINT K1$: FOR K = 1 TO 8: PRINT K2$: NEXT K: PRINT K1$
1040 GOSUB 7010
1050 PRINT "(1) NEDERLANDS": PRINT "(2) ENGLISH "
1060 VE = 15: HO = 0: GOSUB 110: PRINT "UW KEUZE / YOUR CHOICE ?? ";
1070 GOSUB 210: REM GET KEY
1080 IF IN$ = "1" THEN LA = 1: GOTO 1110
1090 IF IN$ = "2" THEN LA = 2: GOTO 1110
1100 GOTO 1070: REM INPUT <> 1/2
1110 VE = 17: HO = 0: GOSUB 110
1120 PRINT M1$(LA);
1130 GOSUB 210
1140 IF (IN$ = "J") OR (IN$ = "Y") THEN GOSUB 30000: GOTO 1170
1150 IF IN$ = "N" THEN 1170
1160 GOTO 1130: REM G$ <> Y,J,N
1170 REM MAIN PROGRAM
1180 GOSUB 100: GOSUB 7000: PRINT TAB(5); M4$(LA)
1190 FOR K = 1 TO 92: READ AK$(K): NEXT K
1200 FOR K = 1 TO 144: READ AL$(K): NEXT K
1210 FOR K = 1 TO 12: READ AA$(K): NEXT K
1220 FOR K = 1 TO 12: READ AB$(K): NEXT K
1230 GOSUB 100: GOTO 1310
1240 GOSUB 100: GOSUB 7000
1250 PRINT TAB(4); M5$(LA)
1260 GOSUB 210
1270 IF IN$ = " " THEN GOSUB 100: GOTO 1310
1280 IF IN$ = "S" THEN GOSUB 100: GOSUB 7010: END
1290 GOSUB 9000
1300 GOTO 1260
1310 REM WHICH CHORD ?
1320 PRINT LEFT$(M2$(LA), 13); TAB(17); LEFT$(M3$(LA), 13)
1330 PRINT LI$
1340 FOR K = 1 TO 12: SR = K: GOSUB 300
1350 PRINT "("; SR$; ") "; TAB(6); AA$(K); TAB(18);
1360 PRINT "("; SR$; ")"; TAB(24); AB$(K): NEXT K
1390 VE = 15: HO = 0: GOSUB 110: PRINT LI$
1400 VE = 16: HO = 0: GOSUB 110
1410 PRINT M2$(LA); " :";
1420 GOSUB 210
1430 IF (ASC(IN$) < 48) OR (ASC(IN$) > 57) THEN IN$ = " "
1440 PRINT IN$; : K$ = IN$
1450 GOSUB 210
1460 IF (ASC(IN$) < 48) OR (ASC(IN$) > 57) THEN IN$ = " "
1470 K$ = K$ + IN$: PRINT IN$: KE = VAL(K$)
1480 IF (KE < 1) OR (KE > 12) THEN GOSUB 250: GOSUB 9000: GOTO 1400
1490 VE = 17: HO = 0: GOSUB 110: PRINT LI$: VE = 18: HO = 0: GOSUB 110
1500 PRINT M3$(LA); " :";
1510 GOSUB 210
1520 IF (ASC(IN$) < 48) OR (ASC(IN$) > 57) THEN IN$ = " "
1530 PRINT IN$; : S$ = IN$
1540 GOSUB 210
1550 IF (ASC(IN$) < 48) OR (ASC(IN$) > 57) THEN IN$ = " "
1560 S$ = S$ + IN$: PRINT IN$: SO = VAL(S$)
1570 IF (SO < 1) OR (SO > 12) THEN GOSUB 250: GOSUB 9000: GOTO 1490
1580 REM   PRINT LI$
2000 AL = ((SO - 1) * 12) + KE
2010 DI$ = AL$(AL)
2020 FOR ZZ = 1 TO (LEN(DI$) - 3) STEP 4
2030 AK = VAL(MID$(DI$, ZZ, 2))
2040 FT = VAL(MID$(DI$, ZZ + 2, 2))
2050 GOTO 5000: REM DISPLAY FRET/STRINGS
2060 GOTO 3000: REM TO  DISPLAY CHORD
2070 REM NOT IN GOSUB  TO  AVOID NESTING
2080 NEXT ZZ
2090 GOTO 1240
3000 DD$ = AK$(AK)
3010 FOR XX = 0 TO 5
3020 VI$ = MID$(DD$, XX * 2 + 1, 2)
3030 X = XX + 1
3040 Y = VAL(LEFT$(VI$, 1))
3050 FI$ = RIGHT$(VI$, 1)
3060 GOSUB 4010
3070 NEXT XX
3080 REM DISPLAY FRET NR.
3090 VE = 3: HO = 31: GOSUB 110: SR = FT: GOSUB 300
3100 PRINT "_"; SR$; " Fret"
3110 VE = 18: HO = 0: GOSUB 110
3120 PRINT M6$(LA); AA$(KE); AB$(SO);
3130 SR = INT(ZZ / 4) + 1: GOSUB 300
3140 PRINT TAB(29); "("; SR$; ")"
3150 PRINT : PRINT M7$(LA): PRINT M8$(LA): PRINT M9$(LA)
3160 PRINT N1$(LA); " ";
3170 GOSUB 210
3180 IF IN$ = " " THEN 3230
3190 IF IN$ = "N" THEN GOSUB 100: GOTO 1320
3200 IF IN$ = "P" THEN GOSUB 10050: GOTO 3170
3210 IF IN$ = "H" THEN GOSUB 30000: GOTO 2050: REM SHOW CHORD
3220 GOSUB 250: GOTO 3170
3230 GOTO 2080: REM END OF ROUTINE DISPLAY CHORD
4000 REM ROUTINE DISPLAY FINGER NR
4010 VE = -2 + (Y * 4): HO = -4 + (X * 5)
4020 IF VE < 0 THEN VE = 0
4030 IF FI$ = "T" THEN 4050
4040 IF VAL(FI$) < 1 THEN VE = VE - 1: GOTO 4060
4050 GOSUB 4500
4060 VE = VE + 1: HO = HO + 1: GOSUB 110
4070 PRINT FI$
4080 RETURN
4500 REM ROUTINE DISPLAY SQUARE
4510 GOSUB 110: PRINT "+-+": VE = VE + 1: GOSUB 110: PRINT "! !"
4520 VE = VE + 1: GOSUB 110: PRINT "+-+": VE = VE - 2
4530 RETURN
5000 REM ----------------------------
5010 REM ROUTINE DISPLAY FRET/STRINGS
5020 GOSUB 100: REM CLS
5025 VE = 1: HO = 0: GOSUB 110
5030 REM  PRINT
5040 FOR K = 1 TO 17: PRINT ST$: NEXT K
5060 FOR L = 1 TO 17 STEP 4: VE = L: HO = 0: GOSUB 110
5070 PRINT FT$: NEXT L
5080 GOTO 2060: REM END OF ROUTINE
7000 REM LARGE CHARACTERS
7010 HO = 2: FOR K = 1 TO 6: VE = K + 1: GOSUB 110
7020 PRINT CH$(K): NEXT K: VE = 12: HO = 0: GOSUB 110
7030 RETURN
8000 REM ROUTINE PRINT  CURSOR TO P LEFT
8005 VE = 0: HO = 0: GOSUB 110: RETURN
9000 REM ROUTINE ERROR MESSAGE(INPUT)
9005 VE = 21: HO = 0: GOSUB 110
9010 PRINT E1$: PRINT E2$: PRINT E1$;
9015 VE = 22: HO = 2
9020 FOR K = 1 TO 6: GOSUB 110: PRINT N3$(LA): FOR L = 1 TO 2
9025 NEXT L: GOSUB 110: PRINT "                  "
9030 NEXT K
9035 VE = 21: HO = 0: GOSUB 110
9040 FOR L = 1 TO 2: PRINT "                      ": NEXT L
9045 PRINT "                      "; : RETURN
10000 REM (PARTIAL) SCREEN PRINT  OUT
10005 REM IF  AVAILABLE WRITE HERE YOUR
10010 REM SPECIF IC ROUTINE
10015 REM >>> ATTENTION MZ-80K <<<<
10020 REM CONVERSION DISPLAY>ASCII
10025 REM LIMIT(53188);REM48 K
10030 REM DATA245,58,216,207,205,206,11,50,216,207,241,201
10035 REM POKE DATA FROM 53188
10040 REM POKE DISPLAY VALUE AT 53208,USR(53188)
10045 REM PEEK(53208) WILL GIVE ASCII
10050 VE = 22: HO = 8: GOSUB 110: PRINT N2$(LA); : RETURN
20000 REM INITIALISATION
20005 LI$ = "": FOR K = 1 TO 29: LI$ = LI$ + "-": NEXT K
20010 K1$ = "": FOR K = 1 TO 39: K1$ = K1$ + "%": NEXT K
20015 K2$ = "%                                     %"
20020 REM DIM AA$(12), AB$(12), AK$(92), AL$(144)
20025 REM DIM CH$(6), M1$(2), M2$(2), M3$(2), M4$(2), M5$(2), M6$(2)
20030 REM DIM M7$(2), M8$(2), M9$(2), N1$(2), N2$(2), N3$(2)
20035 CH$(1) = "  XXX XX XX  XXX  XXXX  XXXX   XXX"
20040 CH$(2) = " XX   XX XX XX XX XX XX XX XX XX"
20045 CH$(3) = " XX   XXXXX XX XX XXXX  XX XX XX"
20050 CH$(4) = " XX   XX XX XX XX XXXX  XX XX  XX"
20055 CH$(5) = " XX   XX XX XX XX XX XX XX XX   XX"
20060 CH$(6) = "  XXX XX XX  XXX  XX XX XXXX  XXX"
20065 M1$(1) = "WILT U EEN PROGRAMMA-UITLEG ?"
20070 M1$(2) = "DO YOU WANT A PROGRAM-EXPLANATION ?"
20075 M2$(1) = "TO ON-HOOGTE   (1-12) "
20080 M2$(2) = "KEY OF CHORD  (1-12) "
20085 M3$(1) = "SOORT AKKOORD (1-12) "
20090 M3$(2) = "SORT OF CHORD (1-12) "
20095 M4$(1) = "_ DATA WORDEN INGELEZEN _"
20100 M4$(2) = "_ READING DATA NOW _"
20105 M5$(1) = "DOORGAAN : 'SPC'   STO PPEN : 'S'"
20110 M5$(2) = "CONTINUE : 'SPC'   STO P    : 'S'"
20115 M6$(1) = "NAAM  AKKOORD : "
20120 M6$(2) = "NAME OF CHORD : "
20125 M7$(1) = "'SPC' = VOLGENDE VARIATIE"
20130 M7$(2) = "'SPC' = NEXT  VARIATION"
20135 M8$(1) = "'N'   = KIES VOLGENDE AKKOORD"
20140 M8$(2) = "'N'   = SELECT NEXT  CHORD"
20145 M9$(1) = "'P'   = PRINT  SCHERM UIT"
20150 M9$(2) = "'P'   = SCREEN PRINT  OUT"
20155 N1$(1) = "'H'   = PROGRAMMA-UITLEG"
20160 N1$(2) = "'H'   = PROGRAM EXPLANATION"
20165 N2$(1) = "ZET ROUTINE V.A. REGEL 10000"
20170 N2$(2) = "PUT ROUTINE FROM LINE 10000"
20175 N3$(1) = "FOUT ANTWOORD   !!"
20180 N3$(2) = "INCORRECT ENTRY !!"
20300 FT$ = "============================== "
20305 ST$ = "l !    !    !    !    !    ! l"
20310 E1$ = "+--------------------+"
20320 E2$ = "!                    !"
20330 RETURN
25000 REM SIX BASIC MAJOR CHORDS
25005 DATA ". 333422111101F"
25010 DATA ". 3322.011.002C"
25015 DATA "3322.0.0.03403G"
25020 DATA ". .0.R21332204D"
25025 DATA ".0.R222123.005A"
25030 DATA ".R222311.0.006E"
25035 REM SIX BASIC MINOR CHORDS
25040 DATA ". 113334221107Cm"
25045 DATA "33.X.033333308Gm"
25050 DATA ". .0.R22341109Dm"
25055 DATA ".0.R222311.010Am"
25060 DATA ".02223.0.0.011Em"
25065 DATA ". 214344322112Bm"
25070 REM EIGHT BASIC Dom 7 CHORDS
25075 DATA ". 33223411.013C7"
25080 DATA "3322.0.0.01114G7"
25085 DATA ". .0.R22112315D7"
25090 DATA ".0.R22.023.016A7"
25095 DATA ".0.R2121213317A7"
25100 DATA ".022.011.0.018E7"
25105 DATA ".022231134.019E7"
25110 DATA ". 221123.02420B7"
25115 REM MOVABLE DIM
25120 DATA "11223311341121D F G# As B"
25125 REM MOVABLE AUGUMENTED
25130 DATA ".X332211114422C+ E+ G#+ As+"
25135 REM BARRE MOVABLES
25140 DATA "11333422111123F"
25145 DATA "11333411111124Fm"
25150 DATA "1133.X22441125F7"
25155 DATA "11113233341126Bes"
25160 DATA "11113334221127Besm"
25165 DATA "11113311341128Bes7"
25170 DATA "43321111114429Gis"
25175 DATA ". 443311221130Cis"
25180 DATA ". 43324421. 31Cis7"
25185 DATA ". 111133442232Esm"
25190 DATA ". 111133223433Es7"
25195 DATA "3T3T2233113434C7"
25200 REM OPEN MINOR 7th
25205 DATA ". .0.R22111135Dm7"
25210 DATA ".0.R22.011.036Am7"
25215 DATA ".R22.0.0.0.037Em7"
25220 DATA ". 21.022.02338Bm7"
25225 REM MOVABLE MINOR 7th
25230 DATA "11331111111139Fm7"
25235 DATA "11323311444440Fm7"
25240 DATA "11113311221141Besm7"
25245 REM SIX OPEN MAJ 7
25250 DATA ". 33342211.042Fmaj7"
25255 DATA ". 3322.0.0.043Cmaj7"
25260 DATA ". .0.R22222244Dmaj7"
25265 DATA ".0.R221123.045Amaj7"
25270 DATA ".0.R2121214346Amaj7"
25275 DATA ".0222311444447Emaj7"
25280 REM MOVABLE Maj7
25285 DATA "2T. 4433221148F#maj7"
25290 DATA ". 433211111149C#maj7"
25295 DATA ". 111133333350Esmaj7"
25300 DATA "11113322341151Besmaj7"
25305 REM OPEN MIN 6
25310 DATA ". 1133.0223452Besm6"
25315 DATA "12.X.013131353Fm6"
25320 DATA ". .01122113354Cm6"
25325 DATA "32.X2133333355Gm6"
25330 DATA ". .0.R22.01156Dm6"
25335 DATA ".0.R2322112457Am6"
25340 DATA ".02223.024.058Em6"
25345 DATA ". 22.011.02359Bm6"
25350 REM OPEN MAJ 6
25355 DATA "11113333333360Bes6"
25360 DATA ". 333322341161F6"
25365 DATA ". 34222311.062C6"
25370 DATA "3322.0.0.0.063G6"
25375 DATA ". .0.R22.02364D6"
25380 DATA ".0.R2323232365A6"
25385 DATA ".R22231124.066E6"
25390 REM OPEN DOM 9
25395 DATA ". 1111.0231267Es9"
25400 DATA ". 12.013131368Bes9"
25405 DATA "1T.01122113469F9"
25410 DATA ". 32213334.070C9"
25415 DATA "33.X.022.01171G9"
25420 DATA ". .0.R2211.072D9"
25425 DATA ".0.R2143213273A9"
25430 DATA ".R22.011.02374E9"
25435 REM MOVABLE DOM 9
25440 DATA ". 221123232375B9"
25445 REM MAJ SUS 4
25450 DATA "11113333441176Bessus4"
25455 DATA ".0323334111177Fsus4"
25460 DATA ". 3233.0113478Csus4"
25465 DATA "33.X.0.0113479Gsus4"
25470 DATA ". .0.R21333480Dsus4"
25475 DATA ".0.R212234.081Asus4"
25480 DATA ".R212223.0.082Esus4"
25485 DATA "21214343.0.083Bsus4"
25490 REM DOM 7 SUS 4
25495 DATA "1132.X33441184F7sus4"
25500 DATA ". 32333411. 85C7sus4"
25505 DATA "33.X.0.0111186G7sus4"
25510 DATA ". .0.R22113387D7sus4"
25515 DATA ".0.R22.033.088A7sus4"
25520 DATA ".R21222334.089F7sus4"
25525 DATA ". 212223.02490B7sus4"
25530 DATA ". 42434321.091F#sus4"
25535 DATA ".X.X2223112492Am6"
27000 REM NRFR   NR=CHORD NR FR=FRET
27005 REM MAJOR A-GIS
27010 DATA "05012305261229023009","2306260129033010"
27015 DATA "2602230729043011","0201230826032905"
27020 DATA "2309260429063001","04013002260529072310"
27025 DATA "3003260629082311","0601300426072909"
27030 DATA "01012301300526082910"
27035 DATA "230226093006"
27040 DATA "0301230330072610"
27045 DATA "2901230430082611"
27050 REM MINOR
27055 DATA "100124053207"
27060 DATA "1101270124063208"
27065 DATA "1201270224073209"
27070 DATA "0703270324083210"
27075 DATA "0704270424093211"
27080 DATA "090127052410"
27085 DATA "320127062411"
27090 DATA "110132022707"
27095 DATA "240132032708"
27100 DATA "240232042709"
27105 DATA "0801240332052710"
27110 DATA "24042711"
27115 REM SEXT
27120 DATA "6501390240024109","390340034110"
27125 DATA "6002390440044111","3601620139054005"
27130 DATA "410139064006","64013801410239074007"
27135 DATA "410339084008","390940094104"
27140 DATA "3501610141053910","4106","63014107"
27142 DATA "390140014107"
27145 REM SEPTIME
27150 DATA "16011701250533073109"
27155 DATA "2801250633083110"
27160 DATA "2001280225073309"
27165 DATA "1301280325083310"
27170 DATA "3101280425093311"
27175 DATA "1501310234032805"
27180 DATA "330131032806"
27185 DATA "180119013302310434052807"
27190 DATA "25013303310534052808"
27195 DATA "3304310633042809"
27200 DATA "14012503330531073408"
27205 DATA "2505"
27210 REM NONE
27215 DATA "73017511","7512","7501","70017502","7503"
27220 DATA "72017504","7505","74017506","6901","7508"
27225 DATA "71017509","7510"
27230 REM MAJOR 7
27235 DATA "45014601480450074909"
27240 DATA "2801250633083110"
27245 DATA "510248065009"
27250 DATA "430151034807"
27255 DATA "51044808"
27260 DATA "4401490251054809"
27265 DATA "5001490351064810"
27270 DATA "4701500249045107"
27275 DATA "4201500349055108"
27280 DATA "4801500449065109"
27285 DATA "480250054907"
27290 DATA "480350064908"
27295 REM MINOR 6
27300 DATA "57019201","9202","59019203","54019204","9205"
27305 DATA "56019206","9207","58019208","53019209","9210"
27310 DATA "55019211","9212"
27315 REM MINOR 7
27320 DATA "360139054005","410139064006","3801410239074007"
27325 DATA "410339084008","510448085011"
27330 DATA "350141053910","4106","37014107"
27335 DATA "390140014108","390240024109","390340034110"
27337 DATA "39044004"
27340 REM SUS 4
27345 DATA "81017705","76017706","830176027707"
27350 DATA "780176037708","76047709","80017605","7604"
27352 DATA "82017607"
27355 DATA "77017608","77027609","79017703","7704"
27360 REM 7SUS4
27365 DATA "88018405","8406","90018407","85018408","8409"
27370 DATA "87018410","76068411","8901","8401","84029101"
27375 DATA "84038601","8404"
27380 REM DIMINISHED
27385 DATA "210221052108","210321062109","210121042107"
27390 DATA "210221052108","210321062109","210121042107"
27395 DATA "210221052108","210321062109","210121042107"
27400 DATA "210221052108","210321062109","210121042107"
27405 REM AUGUMENTED
27410 DATA "22022206","22032207","22042208","22012205"
27415 DATA "22022206","22032207","22042208","22012205"
27420 DATA "22022206","22032207","22042208","22012205"
27425 DATA "A","Ais/bes","B","C","Cis/des","D","Dis/es"
27428 DATA "E","F","Fis/ges","G","Gis/As"
27430 DATA "Maj","Min","6","7","9","Maj7","Min6","Min7"
27433 DATA "Sus4","7sus4","Dim","Aug"
30000 REM PROGRAM EXPLANATION --------
30005 GOSUB 100: REM CLS
30010 IF LA = 2 THEN 30120: REM ENGLISH
30015 REM DUTCH EXPLANATION
30020 PRINT LI$: PRINT "AKKOORDEN VOOR DE GITAAR"
30025 PRINT LI$: PRINT
30030 PRINT "Met behulp van dit programma kunt U"
30035 PRINT "de vinger-zetting van een bepaald"
30040 PRINT "door U opgegeven akkoord op het scherm"
30045 PRINT "laten TO nen.": PRINT
30050 PRINT "'R' geeft de grondTO on aan "
30055 PRINT "'X' betekent : onderdrukken"
30060 PRINT "'0' betekent : open snaar mee spelen"
30065 PRINT
30070 PRINT "De vingers (linker hand) zijn :": PRINT
30075 PRINT "(T) = Duim"
30080 PRINT "(1) = Wijs vinger"
30085 PRINT "(2) = Middel vinger"
30090 PRINT "(3) = Ring vinger"
30095 PRINT "(4) = Pink": PRINT
30100 PRINT "Druk op 'S' voor programma-vervolg."
30105 GOSUB 210
30110 IF IN$ = "S" THEN RETURN: REM START
30115 GOTO 30105: REM <> "S"
30120 PRINT LI$: PRINT "CHORDS FOR  THE GUITAR "
30125 PRINT LI$: PRINT
30130 PRINT "With this program it's possible TO  show"
30135 PRINT "the finger-setting of a particular"
30140 PRINT "chord in a diagram on the screen."
30145 PRINT
30150 PRINT "'R' indicates the root of the chord."
30155 PRINT "'X' means : muffle that string "
30160 PRINT "'0' means : play that open string"
30165 PRINT
30170 PRINT "The left hand fingers are numbered :": PRINT
30175 PRINT "(T) = Thumb"
30180 PRINT "(1) = Index finger"
30185 PRINT "(2) = Middle finger"
30190 PRINT "(3) = Ring finger"
30195 PRINT "(4) = Little finger": PRINT
30200 PRINT "Press 'S' to continue the program."
30205 GOSUB 210
30210 IF IN$ = "S" THEN RETURN: REM START
30215 GOTO 30105: REM <> "S"
31000 REM REPLACE CHR'S FOR  IN 4520,BY OTHER CHR'S
31005 REM TO  FOR M A PERFECT SQUARE.(IDEM IN 20305 )
31010 REM CHORDS FOR  THE GUITAR BY :
31015 REM +-------------------+
31020 REM ! WOUT VAN HAASTER  !
31025 REM ! HOGEWEG 38        !
31030 REM ! 1911 GH UITGEEST  !
31035 REM ! THE NETHERLANDS   !
31040 REM ! PHONE 02513-11480 !
31045 REM +-------------------+
31050 REM SHARP MZ-80K , 48K RAM
31055 REM COMAST-BASIC SP-5025
31060 REM 01.1983 BASICODE-2 VERSION
31065 REM REFERENCE "HERE'S HOW"
31070 REM            BY DAN FOX
31075 REM I WOULD BE INTERESTED TO
31080 REM HEAR FROM CHIP-SHOP
31085 REM USERS WHO HAVE SUGGESTIONS
31090 REM FOR  IMPROVING THIS PROGRAM
31095 REM --------------------------
31100 REM BASICODE-2 SUBROUTINES
31105 REM USED IN THIS PROGRAM :
31110 REM 100 CLEAR SCREEN CURSOR 0,0
31115 REM 110 CURSOR AT HO=HORIZONTAL
31120 REM               VE=VERTICAL
31125 REM 210 GETIN$:IF  IN$=""THEN 210
31130 REM 250 BELL
31135 REM 300 SR$=STR$(SR)
  

